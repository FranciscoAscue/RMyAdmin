shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
source("R/data-mysql.R", local = TRUE)
runApp()
runApp()
runApp()
runApp()
source("R/data-mysql.R", local = TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
metadata_sql <- function(corrida, placa, mindate = NULL, maxdate = NULL){
con <- dbConnect(MySQL(),
user = 'root',
password = 'maq12345',
host = 'localhost',
dbname = 'seqcoviddb')
if( !is.null(mindate) & !is.null(maxdate)){
query = paste0("SELECT * FROM `",table,"` WHERE `FECHA_TM` BETWEEN '",mindate,"' AND '",maxdate,"';")
}else{
query = paste0("SELECT * FROM `",table,"` WHERE `PLACA` = '",placa,"' AND `CORRIDA` =",corrida,";")
}
rs = dbSendQuery(con, query);
df = fetch(rs, -1);
dbDisconnect(con)
return(df)
}
data <- metadata_sql(corrida = 1028, placa = 'placa1')
## data from MySQL
metadata_sql <- function(corrida, placa, mindate = NULL, maxdate = NULL){
con <- dbConnect(MySQL(),
user = 'root',
password = 'maq12345',
host = 'localhost',
dbname = 'seqcoviddb')
if( !is.null(mindate) & !is.null(maxdate)){
query = paste0("SELECT * FROM `metadata` WHERE `FECHA_TM` BETWEEN '",mindate,"' AND '",maxdate,"';")
}else{
query = paste0("SELECT * FROM `metadata` WHERE `PLACA` = '",placa,"' AND `CORRIDA` = ",corrida," ;")
}
rs = dbSendQuery(con, query);
df = fetch(rs, -1);
dbDisconnect(con)
return(df)
}
data <- metadata_sql(corrida = 1028, placa = 'placa1')
runApp()
runApp()
runApp()
runApp()
runApp()
rep("A",2)
metadaupdate("PRUEBA2")
metadaupdate <- function(oficio){
con <- dbConnect(MySQL(),
user = 'root',
password = 'maq12345',
host = 'localhost',
dbname = 'ejemplo')
query = paste0("SELECT NETLAB, OFICIO, CT, CT2, FECHA_TM, MOTIVO, CODIGO  FROM `metadata2`  WHERE `OFICIO` = '",oficio,"' ORDER BY `metadata2`.`FECHA_TM` DESC;")
rs = dbSendQuery(con, query);
df = fetch(rs, -1);
dbDisconnect(con)
return(df)
}
aa <- metadaupdate("PRUEBA2")
library(RMySQL)
aa <- metadaupdate("PRUEBA2")
length(aa$NETLAB)
button <- rep(incon("edit"), length(aa$NETLAB))
button <- rep(icon("edit"), length(aa$NETLAB))
library(shiny)
button <- rep(icon("edit"), length(aa$NETLAB))
aa$Buton <- button
View(button)
button <- rep(as.character(icon("edit")), length(aa$NETLAB))
aa$Buton <- button
View(aa)
actionButton()
actionButton("edit")
actionButton("edit", "editar")
actionButton("edit", "editar", )
actionButton()
create_btns <- function(x) {
x %>%
purrr::map_chr(~
paste0(
'<div class = "btn-group">
<button class="btn btn-default action-button btn-info action_button" id="edit_',
.x, '" type="button" onclick=get_id(this.id)><i class="fas fa-edit"></i></button>
<button class="btn btn-default action-button btn-danger action_button" id="delete_',
.x, '" type="button" onclick=get_id(this.id)><i class="fa fa-trash-alt"></i></button></div>'
))
}
x <- create_btns(mtcars$id)
aa <- metadaupdate("PRUEBA2")
create_btns(aa$NETLAB)
library(dplyr)
create_btns(aa$NETLAB)
aa
aa <- aa %>% dplyr::bind_cols(tibble("ACCIONES" ))
aa
x create_btns(aa$NETLAB)
x <- create_btns(aa$NETLAB)
aa <- metadaupdate("PRUEBA2")
x <- create_btns(aa$NETLAB)
aa <- aa %% dplyr::bind_cols(tibble("ACCIONES" = x))
aa <- metadaupdate("PRUEBA2")
x <- create_btns(aa$NETLAB)
aa <- aa %% dplyr::bind_cols(tibble("ACCIONES" = x))
aa
aa <- aa %% dplyr::bind_cols(tibble("ACCIONES" = x))
aa <- aa %% dplyr::bind_cols(tibble("ACCIONES" = as.character(x)))
create_btns <- function(x) {
x %>%
purrr::map_chr(~
paste0(
'<div class = "btn-group">
<button class="btn btn-default action-button btn-info action_button" id="edit_',
.x, '" type="button" onclick=get_id(this.id)><i class="fas fa-edit"></i></button>
<button class="btn btn-default action-button btn-danger action_button" id="delete_',
.x, '" type="button" onclick=get_id(this.id)><i class="fa fa-trash-alt"></i></button></div>'
))
}
aa <- metadaupdate("PRUEBA2")
x <- create_btns(aa$NETLAB)
aa <- aa %% dplyr::bind_cols(tibble("ACCIONES" = x))
x <- create_btns(aa$NETLAB)
x
aa
aa <- aa %% dplyr::bind_cols(tibble("ACCIONES" = x))
aa <- aa %>% dplyr::bind_cols(tibble("ACCIONES" = x))
View(aa)
stringr::srt_detect("", 'delete')
library(stringr)
stringr::srt_detect("", 'delete')
stringr:::srt_detect("", 'delete')
stringr::srt_detect("", 'delete')
library(tidyverse)
stringr::srt_detect("", 'delete')
library(stringr)
library(readr)
asda <- "asdasd_replace"
asda <- gsub("_replace","", asda, fixed = TRUE)
asda
a <- delete_adasdas13123
a <- "delete_adasdas13123"
str_detect(a, pattern = paste0("adasdas"))
str_detect(a, pattern = paste0("\\b","adasdas","\\b"))
str_detect(a, pattern = paste0("\\b","adasdas","\\b"))
str_detect(a, pattern = paste0("\\b","adasd","\\b"))
str_detect(a, pattern = paste0("\\b","delete_adasdas13123","\\b"))
which(str_detect(a, pattern = paste0("\\b","delete_adasdas13123","\\b")))
a <- read.csv("/home/fascue/Documents/Git/GenomicShiny-Cov/Data/VOC.VOI.csv", header = TRUE)
A
a
which(str_detect(a$Lineages, pattern = "N.8"))
a[40,]
a[40,][["Lineages"]]
a[40,][["Lineages"]] %>% str_extract_all(pattern = "N.")
a[40,][["Lineages"]] %>% str_extract_all(pattern = "N.") %>% unlist()
